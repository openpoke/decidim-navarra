---
- include_vars: secrets_staging.yml
  when: rails_env == "staging"

- include_vars: secrets_production.yml
  when: rails_env == "production"

# @title_es Habilitar la rotación de logs
# @title_en Enable log rotation
# @comment_es Copiar en `/etc/logrotate.d/decidim`
# @comment_en Copy in `/etc/logrotate.d/decidim`
# @input
# f{logrotate.j2}
- name: Enable log rotation
  become: yes
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/{{app_id}}


# @title_es Crear directorios
# @title_en Create folders
# @input mkdir {#{with_items | join: ','}} -o #{file>owner} -g #{file>group} -m #{file>mode}
- name: Create directories
  become: yes
  file:
    state: directory
    path: "{{item}}"
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774
  with_items:
    - "{{app_base_path}}"
    - "{{app_base_path}}/shared"
    - "{{app_base_path}}/shared/bundle"
    - "{{app_base_path}}/shared/config"
    - "{{app_base_path}}/shared/log"
    - "{{app_base_path}}/shared/public"
    - "{{app_base_path}}/shared/tmp"
    - "{{app_base_path}}/shared/vendor"
    - "{{app_base_path}}/shared/cache"
    - "{{app_base_path}}/shared/storage"
    - "{{app_base_path}}/releases"
    - "{{app_base_path}}/repo"

# @title_es Create el fichero de configuración de base de datos para la app
# @title_en Create database config file for the app
# @comment_es Copiar en `/var/www/decidim/shared/config/database.yml`
# @comment_en Copy in `/var/www/decidim/shared/config/database.yml`
# @input
# f{database.yml.j2}
- name: Create database.yml
  become: yes
  template:
    src: database.yml.j2
    dest: "{{app_base_path}}/shared/config/database.yml"
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774

# @title_es Create el fichero de variables de entorno
# @title_en Create the environment variables file
# @comment_es Copiar en `/var/www/decidim/shared/.rbenv-vars`
# @comment_en Copy in `/var/www/decidim/shared/.rbenv-vars`
# @input
# f{rbenv-vars.j2}
- name: Create .rbenv-vars
  become: yes
  template:
    src: rbenv-vars.j2
    dest: "{{app_base_path}}/shared/.rbenv-vars"
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774

# - name: Create HTTP auth file
#   become: true
#   htpasswd:
#     path: /etc/nginx/{{http_auth_file}}
#     name: "{{http_auth_user}}"
#     password: "{{http_auth_password}}"
#     owner: "{{app_user}}"
#     group: "{{app_group}}"
#     mode: 0640

# @title_es Habilitar sidekiq en monit
# @title_en Enable sidekiq in monit
# @comment_es Copiar en `#{template>dest}/#{template>src}`
# @comment_en Copy in `#{template>dest}/#{template>src}`
# @input
# f{monit_sidekiq.j2}
- name: Enable sidekiq in monit
  become: true
  template:
    src: monit_sidekiq.j2
    dest: /etc/monit.d/sidekiq.monit
  notify:
    - Reload Monit

- stat:
    path: "{{ssl_certificate}}"
  register: cert_exists

- stat:
    path: "{{app_base_path}}/current"
  register: current_folder_exists

# @title_es Crear directorio temporal 'current'
# @title_en #{name}
# @input mkdir /var/www/decidim/current -o centos -g www-data -m #{file>mode}
- name: Create temporary 'current' directory
  become: yes
  file:
    state: directory
    path: "{{app_base_path}}/current"
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774
  when: current_folder_exists.stat.exists == False and
        cert_exists.stat.exists == False

# @title_es Enlace simbolico a current/public
# @title_en Sumlinking current/public
# @input ln -s /var/www/decidim/shared/public /var/www/decidim/current/public
- name: Symlink current
  file:
    src: "{{app_base_path}}/shared/public"
    dest: "{{app_base_path}}/current/public"
    state: link
    force: yes
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774
  when: current_folder_exists.stat.exists == False and
        cert_exists.stat.exists == False

# @title_es Enlace simbolico a current/storage
# @title_en Sumlinking current/storage
# @input ln -s /var/www/decidim/shared/storage /var/www/decidim/current/storage
- name: Symlink current storage
  file:
    src: "{{app_base_path}}/shared/storage"
    dest: "{{app_base_path}}/current/storage"
    state: link
    force: yes
    owner: "{{app_user}}"
    group: "{{app_group}}"
    mode: 0774
  when: current_folder_exists.stat.exists == False and
        cert_exists.stat.exists == False

# - name: Copy virtual host file for certbot
#   become: yes
#   template:
#     src: virtualhost_for_certbot.j2
#     dest: /etc/nginx/sites-available/{{app_id}}
#   notify: Restart Nginx
#   when: cert_exists.stat.exists == False

# @title_es Eliminar directorio temporal 'current'
# @title_en #{name}
# @input rm -rf /var/www/decidim/current
- name: Delete temporary 'current' directory
  file:
    state: absent
    path: "{{app_base_path}}/current"
  when: current_folder_exists.stat.exists == False and
        cert_exists.stat.exists == False

# @title_es Copiar el fichero de virtual host para la app de Rails
# @title_en #{name}
# @comment_es Copiar en `/etc/nginx/sites-available/decidim`
# @comment_en Copy in `/etc/nginx/sites-available/decidim`
# @input
# f{virtualhost.j2}
- name: Copy virtual host file for Rails app
  become: yes
  template:
    src: virtualhost.j2
    dest: /etc/nginx/sites-available/{{app_id}}
  notify: Reload Nginx

# @title_es Habilitar virtual hosts
# @title_en #{name}
# @input ln -s /etc/nginx/sites-available/decidim /etc/nginx/sites-enabled/decidim
# systemctl restart nginx
- name: Enable virtual hosts
  become: yes
  file:
    src: /etc/nginx/sites-available/{{app_id}}
    dest: /etc/nginx/sites-enabled/{{app_id}}
    state: link
  notify: Restart Nginx

# @title_es Copiar el crontab de la aplicación
# @title_en #{name}
# @comment_es Copiar en `/etc/cron.d/decidim`
# @comment_en Copy in `/etc/cron.d/decidim`
# @input
# f{cron.j2}
- name: Copy application crontab
  become: yes
  template:
    src: cron.j2
    dest: /etc/cron.d/{{app_id}}
  notify:
    - Restart Cron
