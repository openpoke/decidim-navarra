# frozen_string_literal: true

lock "3.16.0"

set :application, "{{app_id}}"
set :repo_url, "{{app_repo_url}}"

set :linked_files, fetch(:linked_files, []).push(*%w(
  config/database.yml
  .rbenv-vars
))
set :linked_dirs, fetch(:linked_dirs, []).push(*%w(
  log
  tmp/pids
  tmp/cache
  tmp/sockets
  vendor/bundle
  public/system
  public/cache
  public/uploads
  public/decidim-packs
  storage
))
set :sidekiq_config, -> { File.join(release_path, "config", "sidekiq.yml") }
set :passenger_restart_with_touch, true

task :clean_vendor_ansible do
  run_locally { execute "rm -rf #{release_path}/vendor/ansible" }
end

Rake::Task["deploy:compile_assets"].clear
before "bundler:install", "clean_vendor_ansible"

namespace :deploy do
  desc "Compile assets"
  task :compile_assets => [:set_rails_env] do
    invoke "deploy:decidim_webpacker_install"
    invoke "deploy:install_dependencies"
    invoke "deploy:webpacker_compile"
  end

  desc "Install dependencies"
  task :install_dependencies do
    on roles(:all) do
      execute "cd #{release_path}; npm install"
    end
  end

  desc "Webpacker compile"
  task :webpacker_compile do
    on roles(:all) do
      within release_path do
        with rails_env: fetch(:rails_env) do
          execute :rails, "webpacker:compile"
        end
      end
    end
  end

  desc "Decidim webpacker configuration"
  task :decidim_webpacker_install do
    on roles(:all) do
      within release_path do
        with rails_env: fetch(:rails_env) do
          execute :rake, "decidim:webpacker:install"
        end
      end
    end
  end
end
