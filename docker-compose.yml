services:
  traefik:
    image: traefik:v3.4
    container_name: traefik
    command:
      - --api
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.traefik.address=:8080
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.service=api@internal"
    network_mode: host
  app:
    container_name: decidim-${DECIDIM_ENV:-main}
    image: ghcr.io/openpoke/decidim-navarra:${DECIDIM_ENV:-main}
    pull_policy: always
    volumes:
      - ./storage:/app/storage
    restart: ${RESTART_POLICY:-always}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    env_file:
      - .env
    environment:
      - RUN_RAILS=true
      - RUN_SIDEKIQ=true
      - DATABASE_URL
      - SECRET_KEY_BASE
      - MAILER_DELIVERY_METHOD=${MAILER_DELIVERY_METHOD:-smtp}
      - EMAIL_WEBSERVICE_ADDRESS
      - EMAIL_WEBSERVICE_USERNAME_TOKEN_USER
      - EMAIL_WEBSERVICE_USERNAME_TOKEN_PASSWORD
      - CENSUS_WEBSERVICE_ADDRESS
      - CENSUS_WEBSERVICE_CODE
      - CENSUS_WEBSERVICE_PURPOSE
      - CENSUS_WEBSERVICE_OFFICIAL_DOCUMENT_NUMBER
      - CENSUS_WEBSERVICE_OFFICIAL_NAME
      - CENSUS_WEBSERVICE_EXPEDIENT_ID
      - CENSUS_WEBSERVICE_PROCEDURE_CODE
      - CENSUS_WEBSERVICE_PROCEDURE_NAME
      - CENSUS_WEBSERVICE_PROCESSING_UNIT
      - DECIDIM_FORCE_SSL=${DECIDIM_FORCE_SSL:-false}
      - QUEUE_ADAPTER=${QUEUE_ADAPTER:-sidekiq}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY:-2}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DECIDIM_ENABLE_HTML_HEADER_SNIPPETS
      - DECIDIM_ADMIN_PASSWORD_EXPIRATION_DAYS=${DECIDIM_ADMIN_PASSWORD_EXPIRATION_DAYS:-360}
      - CHANGE_ACTIVE_STEP=${CHANGE_ACTIVE_STEP:-enabled}
      - SEND_REMINDERS=${SEND_REMINDERS:-enabled}
      - WEEKLY_NOTIFICATIONS_DIGEST=${WEEKLY_NOTIFICATIONS_DIGEST:-enabled}
      - DAILY_NOTIFICATIONS_DIGEST=${DAILY_NOTIFICATIONS_DIGEST:-enabled}
      - HEALTHCHECK_EXCLUDE_CHECKS=${HEALTHCHECK_EXCLUDE_CHECKS:-emailconf}
      - SMTP_STARTTLS_AUTO=${SMTP_STARTTLS_AUTO:-true}
      - SMTP_USERNAME
      - SMTP_PASSWORD
      - SMTP_ADDRESS
      - SMTP_DOMAIN
      - SMTP_PORT
      - DECIDIM_MAILER_SENDER
      - MAPS_API_KEY
      - MAPS_PROVIDER=${MAPS_PROVIDER:-here}
      - RACK_ATTACK_SECRET
      - OMNIAUTH_FACEBOOK_APP_ID
      - OMNIAUTH_FACEBOOK_APP_SECRET
      - OMNIAUTH_GOOGLE_CLIENT_ID
      - OMNIAUTH_GOOGLE_CLIENT_SECRET
      - APPSIGNAL_PUSH_API_KEY
      - RORVSWILD_API_KEY
    depends_on:
      - redis
    network_mode: host
  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data
    restart: ${RESTART_POLICY:-always}
    network_mode: host
  db_backup:
    image: tiredofit/db-backup
    container_name: db_backup
    volumes:
      - ./backups:/backup
    env_file:
      - .env
    environment:
      - TIMEZONE=${TIMEZONE:-Europe/Vienna}
      - CONTAINER_ENABLE_MONITORING=${CONTAINER_ENABLE_MONITORING:-FALSE}
      - USER_DBBACKUP=${USER_DBBACKUP:-1000}
      - GROUP_DBBACKUP=${GROUP_DBBACKUP:-1000}
      - BACKUP_JOB_CONCURRENCY=${BACKUP_JOB_CONCURRENCY:-1}     # Only run one job at a time
      - DEFAULT_CHECKSUM=${DEFAULT_CHECKSUM:-NONE}        # Don't create checksums
      - DEFAULT_COMPRESSION=${DEFAULT_COMPRESSION:-Bzip2}     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=${DEFAULT_BACKUP_INTERVAL:-1440}   # Backup every 1440 minutes
      - DEFAULT_BACKUP_BEGIN=${DEFAULT_BACKUP_BEGIN:-0100}      # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=${DEFAULT_CLEANUP_TIME:-10080}    # Cleanup backups after a week
      - DB01_TYPE=pgsql
      - DB01_HOST=${POSTGRES_HOST:-db}
      - DB01_USER=${POSTGRES_USER:-postgres}
      - DB01_PASS=${POSTGRES_PASSWORD:-decidim}
      - DB01_NAME=${POSTGRES_DB:-decidim}
volumes:
  redis_data:
